{"version":3,"file":"index.mjs","sources":["../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name arcsine\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/strided/arcsine}\n*/\nimport arcsine from '@stdlib/random-strided-arcsine';\nsetReadOnly( ns, 'arcsine', arcsine );\n\n/**\n* @name beta\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/strided/beta}\n*/\nimport beta from '@stdlib/random-strided-beta';\nsetReadOnly( ns, 'beta', beta );\n\n/**\n* @name discreteUniform\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/strided/discrete-uniform}\n*/\nimport discreteUniform from '@stdlib/random-strided-discrete-uniform';\nsetReadOnly( ns, 'discreteUniform', discreteUniform );\n\n/**\n* @name exponential\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/strided/exponential}\n*/\nimport exponential from '@stdlib/random-strided-exponential';\nsetReadOnly( ns, 'exponential', exponential );\n\n/**\n* @name lognormal\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/strided/lognormal}\n*/\nimport lognormal from '@stdlib/random-strided-lognormal';\nsetReadOnly( ns, 'lognormal', lognormal );\n\n/**\n* @name minstd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/strided/minstd}\n*/\nimport minstd from '@stdlib/random-strided-minstd';\nsetReadOnly( ns, 'minstd', minstd );\n\n/**\n* @name mt19937\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/strided/mt19937}\n*/\nimport mt19937 from '@stdlib/random-strided-mt19937';\nsetReadOnly( ns, 'mt19937', mt19937 );\n\n/**\n* @name normal\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/strided/normal}\n*/\nimport normal from '@stdlib/random-strided-normal';\nsetReadOnly( ns, 'normal', normal );\n\n/**\n* @name randu\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/strided/randu}\n*/\nimport randu from '@stdlib/random-strided-randu';\nsetReadOnly( ns, 'randu', randu );\n\n/**\n* @name uniform\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/strided/uniform}\n*/\nimport uniform from '@stdlib/random-strided-uniform';\nsetReadOnly( ns, 'uniform', uniform );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["ns","setReadOnly","arcsine","beta","discreteUniform","exponential","lognormal","minstd","mt19937","normal","randu","uniform"],"mappings":";;4iEAoCA,IAAAA,EAAA,CAAA,EAUAC,EAAAD,EAAA,UAAAE,GAUAD,EAAAD,EAAA,OAAAG,GAUAF,EAAAD,EAAA,kBAAAI,GAUAH,EAAAD,EAAA,cAAAK,GAUAJ,EAAAD,EAAA,YAAAM,GAUAL,EAAAD,EAAA,SAAAO,GAUAN,EAAAD,EAAA,UAAAQ,GAUAP,EAAAD,EAAA,SAAAS,GAUAR,EAAAD,EAAA,QAAAU,GAUAT,EAAAD,EAAA,UAAAW"}